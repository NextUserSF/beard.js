// Generated by CoffeeScript 1.6.3
(function() {
  describe('Data Tag', function() {
    var ret, tpl;
    tpl = null;
    ret = null;
    beforeEach(function() {
      return tpl = new Beard();
    });
    afterEach(function() {
      return tpl = null;
    });
    describe('Plain Variable', function() {
      it('should return correct value', function() {
        tpl.set('<%= variable | "Default" %>');
        tpl.addVariable('variable', 'Variable');
        ret = tpl.render();
        return expect(ret).toEqual('Variable');
      });
      return it('should return default value', function() {
        tpl.set('<%= variable | "Default" %>');
        ret = tpl.render();
        return expect(ret).toEqual('Default');
      });
    });
    describe('Nested Variable', function() {
      it('should return correct value', function() {
        tpl.set('<%= nested.variable | "Default" %>');
        tpl.addVariable('nested', {
          variable: 'Nested Variable'
        });
        ret = tpl.render();
        return expect(ret).toEqual('Nested Variable');
      });
      return it('should return default value', function() {
        tpl.set('<%= nested.variable | "Default" %>');
        ret = tpl.render();
        return expect(ret).toEqual('Default');
      });
    });
    describe('Plain Function call', function() {
      it('should return correct value', function() {
        tpl.set('<%= func() | "Default" %>');
        tpl.addVariable('func', function() {
          return 'Function call';
        });
        ret = tpl.render();
        return expect(ret).toEqual('Function call');
      });
      it('should return default value', function() {
        tpl.set('<%= func() | "Default" %>');
        ret = tpl.render();
        return expect(ret).toEqual('Default');
      });
      return it('should handle `this` correct', function() {
        tpl.set('<%= full_name() %>');
        tpl.addVariable('first_name', 'John');
        tpl.addVariable('last_name', 'Doe');
        tpl.addVariable('full_name', function() {
          return "" + this.first_name + " " + this.last_name;
        });
        ret = tpl.render();
        return expect(ret).toEqual('John Doe');
      });
    });
    return describe('Plain Function call with Arguments', function() {
      return it('should return correct value', function() {
        tpl.set('<%= func("Function call") | "Default" %>');
        tpl.addVariable('func', function(x) {
          return x;
        });
        ret = tpl.render();
        return expect(ret).toEqual('Function call');
      });
    });
  });

  describe('Comment Tag', function() {
    var ret, tpl;
    tpl = null;
    ret = null;
    beforeEach(function() {
      tpl = new Beard();
      tpl.set('<%# This is comment %>');
      return ret = tpl.render();
    });
    afterEach(function() {
      return tpl = null;
    });
    return it('should return nothing', function() {
      return expect(ret).toEqual('');
    });
  });

}).call(this);
